<?xml version="1.0" encoding="UTF-8"?>

<!--
Copyright 2010-2012 by PHP-maven.org

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
	<properties>
		<title>Maven for PHP - Dependency management</title>
		<author email="martin.eisengardt@googlemail.com">Martin Eisengardt</author>
	</properties>
	
	<head>
		<title>Maven for PHP - Dependency management</title>
		<meta name="keyword" content="apache, maven, php, php-maven, maven tutorial, php maven tutorial, php dependency, dependency management" />		
	</head>
	
	<body>
		<p style="text-align:center">[ <a href="tut-multiprojectlayout.html">Previous</a> | <a href="tutorials.html">TOC</a> | <a href="tut-pear.html">Next</a> ]</p>
		
		<section name="Dependency management">
		<p>
		PHP-Maven will extract every dependency either to target/php-deps or to target/php-test-deps (depending on the scope of the dependency).
		This will be ok for many dependencies. But you may need another setup for a specific dependency.  
		</p>
		
		<subsection name="Setup dependency management">
		<p>
		To setup the dependency management simply add a build plugin configuration:
<macro name="snippet">
<param name="id" value="simple"></param>
<param name="file" value="${phpmavenFsRoot}/src/site/include/pom_depmng.xml"></param>
</macro>
		</p>
		
		<p>This example will perform the "include" action on the dependency org.mygroup:my-lib. What does it mean? PHP-Maven can perform various
		actions on a dependency. The include action tells maven to not extract the phar file but instead put it on php include path.</p>
		</subsection>
		
		<subsection name="The classic action">
		<p>The classic action tells maven to simply extract the dependency on the target/php-deps folder or target/php-test-deps folder.
		It is the same behavior as removing the dependency configuration from the pom.</p>
		</subsection>
		
		<subsection name="The extract action">
		<p>The extract action will extract files from phar. You can specify a sub folder inside the phar that will be extracted.
		And you can give an alternative target folder to extract the files to. Notice: If you extract the files into target/classes
		they will be added to the phar package (maybe not a good idea). See the following snippet for an example:
<macro name="snippet">
<param name="id" value="extract"></param>
<param name="file" value="${phpmavenFsRoot}/src/site/include/pom_depmng.xml"></param>
</macro></p>

		<p>
		This example will extract the folder "anyfolder" of my-lib into the php-deps folder. The second dependency configuration causes
		php-maven to extract the folder "somefolder" to a totally new folder.
		</p>
		</subsection>
		
		<subsection name="The extract and include action">
		<p>Especially if you plan to extract files to a totally new folder they won't be set on include path
		of php-maven. To solve this you can use the "extractAndInclude" action. See the following example:
<macro name="snippet">
<param name="id" value="extractAndInclude"></param>
<param name="file" value="${phpmavenFsRoot}/src/site/include/pom_depmng.xml"></param>
</macro></p>

		<p>
		This example will extract the two dependencies similar to the extract action. For "my-lib" it will put the target folder itself
		to the include path. For "my-other-lib" it will place the deepfolder inside the target folder on the include path.
		</p>
		</subsection>
		
		<subsection name="The ignore action">
		<p>The ignore action totally ignores the given dependency. However it is still resolved and it is required to be present
		in a repository. When should you use the ignore action? If you have an external package manager or bootstrap script
		performing actions and setting up your include path. However in future versions of php-maven you will be able to hook
		the dependency management from php side. See the following example:
<macro name="snippet">
<param name="id" value="ignore"></param>
<param name="file" value="${phpmavenFsRoot}/src/site/include/pom_depmng.xml"></param>
</macro></p>

		<p>
		This example will ignore "my-lib" at all and will use the classic action on "my-other-lib" (classic is the default if
		a dependency was not specified)
		</p>
		</subsection>
		
		<subsection name="The include action">
		<p>With include action you are able to directly use the phar file and skip any extraction of the files.
		The phar file will be directly used from repository. See the following example:
<macro name="snippet">
<param name="id" value="include"></param>
<param name="file" value="${phpmavenFsRoot}/src/site/include/pom_depmng.xml"></param>
</macro></p>

		<p>
		This example will put the anyfolder of "my-lib" and the "my-other-lib" root path to the include path.
		</p>
		</subsection>
		
		<subsection name="The pear action">
		<p>With pear action you are able to use a pear project and force to locally install it instead of simply extracting
		the phar file. Some pear projects need a clean pear installation. See the following example:
<macro name="snippet">
<param name="id" value="pear"></param>
<param name="file" value="${phpmavenFsRoot}/src/site/include/pom_depmng.xml"></param>
</macro></p>
		</subsection>
		
		<p>Notice that this only works for projects of packaging pear. See the <a href="tut-pear.html">pear tutorial section</a> for details.</p>
		</section>
		
		<p style="text-align:center">[ <a href="tut-multiprojectlayout.html">Previous</a> | <a href="tutorials.html">TOC</a> | <a href="tut-pear.html">Next</a> ]</p>
	</body>
</document>