<?xml version="1.0" encoding="UTF-8"?>

<!--
Copyright 2010-2012 by PHP-maven.org

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
	<properties>
		<author email="martin.eisengardt@googlemail.com">
			Martin Eisengardt
		</author>

		<title>Maven for PHP company support - terms of usage</title>
		<meta name="keyword" content="apache, maven, php"></meta>
	</properties>
	
	<body>

<section name="CLOSE-SOURCE support - terms of usage">
<p><b><i>2012-03-27</i></b></p>

<p>You should carefully read the following Terms and Conditions. Your purchase or use of our products implies that you have read and accepted
these Terms and Conditions.</p>
<p>If you did not purchase our product or did not agree to the following Terms and Conditions you must assume that you are using our product
under the Terms of the Open-Source license associated with the product. Under the Terms of the Open-Source license you will not get any warranty
or support guarantee. However we will always provide a platform to get support from either the community itself or from the creators and developers
of our product.</p>

<subsection name="§1 Changes of the Terms and Conditions">
<p>1.1 PHP-Maven is able to change the Terms and Conditions at any time. Every change must be communicated to You at least 4 weeks before they become
active.</p>
<p>1.2 You are allowed to deny the changes of the Terms and Conditions within those 4 weeks if the change means You will be in a worse position.
If you deny the changes that means that the support contract is voided.</p>
</subsection>

<subsection name="§2 License">
<p>2.1 You are not allowed to change PHP-Maven in any way. This includes changes made to the code and resulting in a re compilation as well as changes
made during runtime by associating and using non-official libraries and plugins.</p>
<p>2.2 As a core feature of maven there are thousands of plugins that can be used together with PHP-Maven. Plugins not directly influencing the behavior
of PHP-Maven can be used in Your projects. You will not get any warranty for maven itself or any Plugin you are using.</p>
<p>2.3 You are not allowed to redistribute PHP-Maven in any way. If you plan to redistribute PHP-Maven in any way you must always fall back to the
Open-Source License.</p>
<p>2.4 You are not allowed to translate PHP-Maven in other programming languages or to use on non-supported platforms.</p>
<p>2.5 You are not allowed to use our product for any kind of illegal, racist and problematic project (especially spam, unwanted commercials). If
you use your PHP-Maven for any type of lottery and porn you are responsible to ensure that this is neither a public project nor a teen/child gets
access to it in any way. Your websites must must contain a good age verification code.</p>
<p>2.6 PHP-Maven is allowed to cancel the support contract and as soon as you did break the licensing conditions from 2.1 to 2.5. In this case
PHP-Maven is allowed to demand the outstanding fee.</p>
<p>2.7 As there is currently no need to have special installations for PHP-Maven (Maven itself does everything without special installation)
there is no need for installation support or project setup support. The hands-on-support shall be used to help setting up complex project and
server infrastructure.</p>
</subsection>

<subsection name="§3 Payment and contract duration">
<p>3.1 You need to pay the support fee monthly before a period of support starts.</p>
<p>3.2 If you did not pay the fee for two weeks PHP-Maven is allowed to freeze the support, meaning to answer neither your new support requests
nor already created support requests till the payment arrives PHP-Maven.</p>
<p>3.3 PHP-Maven is allowed to cancel the support contract if you do not pay for one more week. PHP-Maven is allowed to demand the outstanding
fee.</p>
<p>3.4 The contract is automatically renewed for the same duration if you do not cancel the support. You are able to cancel the support either
by web access, email or fax/letter. Cancellation via web/email/fax can be done at least 24 hours before the next contract period begins.
Cancellation via letter can be done at least 4 days before the new period begins and from non-European countrys at least 2 weeks before the
new period begins.</p>
<p>3.5 Cancellation the support contract requires you to fall back to the Open-Source license associated with our product.</p>
<p>3.6 You must ensure you are using PHP-Maven for projects in the suggested project and lifecycle structure. Customizing lifecycles and adding
huge set of script invocations during build is possible but may cause that PHP-Maven cannot fulfill the guaranteed solution time. However this
is no reason to claim compensation.</p>
<p>3.7. You may cancel the contract the first two weeks without any reason. Already payed of the first month will not be refunded. If you decide
to cancel the contract you cannot rely on any warranty or guaranteed response times nor you can claim compensation.</p>
</subsection>

<subsection name="§4 ETA and priorities">
<p>4.1 The response time mentioned on the product explanation means the time between receiving your support request and sending the first
answer from any human support of PHP-Maven.</p>
<p>4.2 With product "basic" and "premium" you can reach the support only from monday to friday and from 9am to 9pm (CET/CEST). On German
statutory holidays you may not reach the support. The guaranteed answering period of time of 24 hours will mean that you get an answer (or
a solution) till the next working day. This means that you may have to wait till monday if you send us an incident on friday.</p>
<p>4.3 If PHP-Maven cannot be reached or cannot answer because of the following reasons this will cause a delay in the guaranteed answering
time:<br />
- force majure<br />
- problem in the internet (f.e. net splits, broken connections)<br />
- labor dispute</p>
<p>4.4 Priority 1 means: All of your projects and builds are broken because of an incident. A very important key project is broken because
of a PHP-Maven incident. You are adviced to tell us your key projects before creating any incidents for them. A key project may only consist of
a version range. As soon as you reach a stable state the key project is changed to a normal project.</p>
<p>4.5 Priority 2 means: A PHP-Incidents causes that your employees cannot work any more on a specific project or feature. Only a small part of
the lifecycle does not work.</p>
<p>4.6 Priority 3 means: Any question or feature request as well as non-important incidents.</p>
<p>4.7 If the number of developers is limited you must name them. Only the developers are allowed to send us support requests. This shall not mean
that no other person is ever allowed to send us incidents but you must ensure that every incident is known by the named developers and PHP-Maven
may only contact those named developers to solve the incident.</p>
<p>4.8 If PHP-Maven is not able to fulfill a priority 1 incident in guaranteed time you are allowed to claim compensation at a maximum of 4 monthly
fees per contract period. This does not include the situations where PHP-Maven causes the incident because of intention. If you plan to claim
compensation you must notify PHP-Maven at least 3 working days after the incident was solved or after PHP-Maven sent a workaround.</p>
<p>4.9 If PHP-Maven is not able to fulfill a priority 2 incident in guaranteed time and is not able to give a good reason (f.e. no workaround available and incident
causes a huge rework) you are allowed to claim compensation at a maximum of 1 monthly fee per contract period. This does not include the situations
where PHP-Maven causes the incident because of intention. If you plan to claim compensation you must notify PHP-Maven at least 3 working days
after the incident was solved or after PHP-Maven sent a workaround.</p>
<p>4.10 If PHP-Maven is not able to fulfill a priority 1, 2 or 3 in guaranteed time and you are not claiming compensation you are able to cancel
the contract to the end of the current month. If you plan to cancel the contract you must be notify PHP-Maven at least 24 hours before the next month
(see 3.4)</p>
</subsection>

<subsection name="§5 Warranty, rights and confidentiality clause">
<p>5.1 PHP-Maven must be able to access your projects. That means that PHP-Maven gets user/password access to your subversion at least
if an incident can only be solved only by debugging with the original projects. You may either give us access per incident (this may cause
delay of guaranteed ticket periods) or at general.</p>
<p>5.2 PHP-Maven ensures that the sources and the projects are never published. PHP-Maven ensures that passwords and other security related information
are kept in confidence. PHP-Maven ensures (for example via proxy software) that any local copy may be deleted as soon as the incident is solved.
If you are having very large projects PHP-Maven may be allowed to prepare special test systems or local copies of your project (f.e. via proxies)
to shorten the time for checkouts and tests. You will be informed if PHP-Maven decides to store local copies. If the support contract is cancelled
PHP-Maven will delete any proxy or local copy (exception: If you claim compensation).</p>
<p>5.3 PHP-Maven ensures that their own servers and development hardware and software is secured via periodically upgraded virus scanners. However
we cannot guarantee security for 100% as this is impossible for everyone. One shall assume that using daily updated virus scanners, upgrading servers
for important security fixes once a week and acting upon security related rules of conduct is the best available security.</p>
<p>5.4 You must not tell third parties or unprivileged employees about passwords or any access to the PHP-Maven servers or frontends.</p>
<p>5.5 You must tell PHP-Maven about the projects service times and (if available and needed) for ways to contact your standby service. PHP-Maven
may announce a review on certain projects within or outside service times of your projects. Those reviews shall be used to test newer features and
versions against your projects (PHP-Maven shall not influence your project but may create local copies to test against). Another issue for reviews
are project checkups to detect upcoming problems and incidents right before this results in huge problems.</p>
<p>5.6 PHP-Maven gives a warranty for working and usable stable versions of the product itself. This requires you to use PHP-Maven in the documented
way and to not rely on undocumented or deprecated behavior. You shall notify PHP-Maven in priority 3 tickets about new projects/ artifacts that may
cause feature request as early as it is possible. This shall be used to minimize the amount of broken builds.</p>
</subsection>

<subsection name="§6 Ownership">
<p>6.1 You must not claim ownership or copyright on the product. Even if you are using it to support automated delivery and installation for
your customers you must always at least document the ownership of the product.</p>
</subsection>

<subsection name="§7 Fraud check">
<p>7.1 PHP-Maven is allowed to start fraud checks before accepting the contract.</p>
<p>7.2 PHP-Maven may start a fraud check if there are many bogus incidents or if PHP-Maven thinks that you are creating huge ampount of incidents by
intention. You shall not misuse the support contract.</p>
<p>7.3 During fraud checks the contract may be paused.</p>
</subsection>

<subsection name="§8 Traffic and mirrors">
<p>8.1 PHP-Maven is allowed to propose you to use mirrors to minimize traffic. PHP-Maven shall always deliberate about whether the traffic costs
will increase the support costs or the mirror will decrease the costs on both sides.</p>
</subsection>
</section>
</body>
</document>