<?xml version="1.0" encoding="UTF-8"?>

<!--
Copyright 2010-2012 by PHP-maven.org

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
	<properties>
		<title>Maven for PHP - deploy your project</title>
		<author email="christian.wiedemann@key-tec.de">Christian Wiedemann</author>
	</properties>
	
	<head>
		<title>Maven for PHP - deploy your project</title>
		<meta name="keyword" content="apache, maven, php, php-maven, maven tutorial, php maven tutorial, maven deploy, php deploy" />		
	</head>
	
	<body>
		<p style="text-align:center">[ <a href="tut-lifecycle-documentation.html">Previous</a> | <a href="tutorials.html">TOC</a> | <a href="tut-tools-phar.html">Next</a> ]</p>
		
		<section name="Deploy your project">
		
			<subsection name="Preamble">
			<p>Within this tutorial we will explain how to deploy your project. There are multiple sections since deploying the project is different from
			deploying the website/documentation.</p>
			</subsection>
		
			<!-- <subsection name="Assemblies">
			<p>(DEPRECATED) (TODO) Review this chapter</p>
			
			<p>Following assemblies are available:</p>
			
			<ul>
			<li><span style="white-space: nowrap; font-weight: bold; font-size: 1.25em;">php-web</span><br></br>Creates a simple web project. All dependencies will be in phpinc folder.</li>
			<li><span style="white-space: nowrap; font-weight: bold; font-size: 1.25em;">php-lib</span><br></br>Creates a library project. Only the project source file are included without a root folder. </li>
			<li><span style="white-space: nowrap; font-weight: bold; font-size: 1.25em;">php-lib-with-dependencies</span><br></br>Creates an library project with all dependend libraries.</li>
			</ul>
		
				<subsection name="Using the assemblies">
				<p>Add following code to your pom.xml.</p>
				<macro name="snippet">
				<param name="id" value="assembly"></param>
				<param name="file" value="src/site/include/assembly.xml"></param>
				</macro>
				<p>and run:</p>
				<source>
				mvn deploy
				</source>
				</subsection>
			</subsection> -->
		
			<subsection name="Deploy the phar">
			<p>Deploying the phar means to upload the project package somewhere so that others are able to find and use it. First of all you
			must tell maven where to upload it. Edit your pom.xml and add the following lines:</p>
			
			<source><![CDATA[
<project>
  ...
  <distributionManagement>
    <repository>
      <id>releases.mydomain.org</id>
      <name>My releases</name>
      <url>ftp://ftp.mydomain.org/repository/releases</url>
    </repository>
    <snapshotRepository>
      <id>snapshots.mydomain.org</id>
      <name>My snapshots</name>
      <url>ftp://ftp.mydomain.org/repository/snapshots</url>
    </snapshotRepository>
  </distributionManagement>
  ...
</project>
			]]></source>

			<p>Within this example we use a ftp connection to upload the package. Maven does not need anything else since it assumes
			a simple file system layout fits your need. So it will create some folders containing your project and the correct
			versions. Note: It will work if you simply deploy the files via ftp to a folder visible from apache htdocs. The http url
			may be used to configure your team mates settings.xml (view the prepare php-maven section on an example). But we
			strongly recommend that you use the official php-maven repository since it is tuned for performance and since it
			will be available for every team mate automatically as soon as he configures the settings.xml as suggested. We will
			explain how to use the official repository for sharing your in the next tutorial chapter.</p>
		
			<p>You may wonder where the credentials are stored? Of course it is not good to write them down in your pom.xml.
			This won&apos;t be a good idea to share your private passwords with the rest of the world. There is a small trick. We
			will put everything into the settings.xml. So here is the snippet for your settings.xml:</p>
		
			<source><![CDATA[
<settings>
   ...
   <servers>
     <server>
       <id>releases.mydomain.org</id>
       <username>FTP-USER</username>
       <password>FTP-PASSWORD</password>
       <filePermissions>660</filePermissions>
       <directoryPermissions>770</directoryPermissions>
     </server>
   </servers>
   ...
</settings>
			]]></source>
		
			<p>Notice that we reuse the ids of the pom.xml. That&apos;s the hint for maven which credentials to be used for your ftp
			upoload. Now that was everything we need for uploading the version. let us give it a try:</p>
			
			<source>mvn deploy</source>
			
			<p>If everything is ok have a look at your web server and see the folders maven created and the files it uploaded.
			There is nothing to do for know. As soon as someone configures to use your http url (or maybe even an anonymous ftp)
			as repository maven will automatically find and download the pom and the phar.</p>
			</subsection>
		
			<subsection name="Deploy the site">
			<p>Deploying the site is similar to deploying the package. But it requires additional settings and one additional goal.
			First of all let us edit the pom.xml and add the following:</p>

			<source><![CDATA[
<project>
  ...
  <distributionManagement>
    ...
    <site>
      <id>project-site.mydomain.org</id>
      <name>My releases</name>
      <url>ftp://ftp.mydomain.org/documentation</url>
    </site>
    ...
  </distributionManagement>
  ...
</project>
			]]></source>

			<p>As we said before we will add the credentials to the settings.xml. Simply use the correct server-id.</p>
		
			<p>Execute the new goal:</p>
		
			<source>mvn site-deploy</source>
		
			<p>That&apos;s it. Simple, isn&apos;t it?</p>
			</subsection>
		</section>

		<p style="text-align:center">[ <a href="tut-lifecycle-documentation.html">Previous</a> | <a href="tutorials.html">TOC</a> | <a href="tut-tools-phar.html">Next</a> ]</p>

	</body>
</document>