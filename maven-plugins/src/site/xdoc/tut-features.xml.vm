<?xml version="1.0" encoding="UTF-8"?>

<!--
Copyright 2010-2012 by PHP-maven.org

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
	<properties>
		<title>Maven for PHP - Feature activation</title>
		<author email="martin.eisengardt@googlemail.com">Martin Eisengardt</author>
	</properties>
	
	<head>
		<title>Maven for PHP - Feature activation</title>
		<meta name="keyword" content="apache, maven, php, php-maven, maven tutorial, php maven tutorial, project organization, multi project, php modules, phar modules" />		
	</head>
	
	<body>
		<p style="text-align:center">[ <a href="tut-documentation.html">Previous</a> | <a href="tutorials.html">TOC</a> | <a href="tut-cli.html">Next</a> ]</p>
		
		<section name="Feature activation within projects">
		<p>
		PHP-Maven allows frameworks and other aspects to manipulate the behavior. For example some frameworks require a special directory and file layout to work with their autoloaders.
		On PHP-Maven projects (inside the pom.xml) you call them features. Enabling additional features is easy:
		</p>
	<macro name="snippet">
	  <param name="id" value="features-sample"></param>
	  <param name="file" value="${phpmavenFsRoot}/src/site/include/pom_features.xml"></param>
    </macro>
    	<p>
    	This example will enable feature "some-feature" on the project.
    	</p>
		</section>
		
		<section name="Well known features">
		<p>
		Well known features are those that are available without any additional setup. There may be more features for php-maven available in third party projects.
		Those features can be used inside your project by adding additional build plugins, for example:
		</p>
	<macro name="snippet">
	  <param name="id" value="features-thirdparty"></param>
	  <param name="file" value="${phpmavenFsRoot}/src/site/include/pom_features.xml"></param>
    </macro>
    <table border="1">
    <tr><th>feature-name</th><th>maintainer</th><th>description</th></tr>
    </table>
		</section>
		
		<section name="Developing features">
		<p>
		Features are regular maven plugin projects. They provide a plexus component with role IPhpFeature and the features name as hint. See the
		<a href="https://github.com/php-maven/maven-php-plugin/blob/master/maven-plugins/maven-php-project/src/test/java/org/phpmaven/project/features/test/TestFoo.java">php-maven source code for an example.</a>
		</p>
		<p>
		Watch out for IPhpFeature* interfaces and read the javadoc carefully. They guide you to the possible ways to customize php-maven.
		</p>
		</section>
		
		<p style="text-align:center">[ <a href="tut-documentation.html">Previous</a> | <a href="tutorials.html">TOC</a> | <a href="tut-cli.html">Next</a> ]</p>
	</body>
</document>